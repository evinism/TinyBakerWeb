swagger: "2.0"
info:
  description: "Server for TinyBaker Transforms via TinyBakerWeb"
  version: "0.0.1"
  title: "TinyBaker Web"
  contact:
    email: "evinism@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api"
tags:
  - name: "transform"
    description: "Transforms"
    externalDocs:
      description: "Find out more"
      url: "https://tinybaker.readthedocs.io"
  - name: "jobs"
    description: "Access to currently running jobs"
  - name: "filestore"
    description: "API for TinyBakerWeb's local filestore"
schemes:
  - "https"
  - "http"
paths:
  /transforms:
    get:
      tags:
        - "transform"
      summary: "Gets list of available transforms"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "getTransforms"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "status"
          in: "query"
          description: "Status values that need to be considered for filter"
          type: "array"
          items:
            type: "string"
            enum:
              - "queued"
              - "running"
              - "error"
              - "halted"
              - "success"
          collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transform"
        "400":
          description: "Invalid status value"
  /jobs:
    get:
      tags:
        - "jobs"
      summary: "Returns all running TinyBaker jobs"
      description: "Returns all running TinyBaker jobs"
      operationId: "getJobs"
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Job"
    post:
      tags:
        - "jobs"
      summary: "Triggers a TinyBaker transform to run"
      description: ""
      operationId: "triggerTinyBakerRun"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "transformId"
          in: "formData"
          description: "ID of the transform to run"
          required: true
          type: "integer"
          format: "int64"
        - name: "additionalMetadata"
          in: "formData"
          description: "Additional data to pass to server"
          required: false
          type: "string"
        - name: "file"
          in: "formData"
          description: "file to upload"
          required: false
          type: "file"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Job"

  /transforms/{transformId}:
    get:
      tags:
        - "transform"
      summary: "Find transform by ID"
      description: "Returns a single transform"
      operationId: "getTransformById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "transformId"
          in: "path"
          description: "ID of transform to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Transform found"
          schema:
            $ref: "#/definitions/Transform"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Transform not found"
  /jobs/{jobId}:
    get:
      tags:
        - "jobs"
      summary: "Get job by ID"
      description: ""
      operationId: "getJobById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "jobId"
          in: "path"
          description: "ID of job that needs to be fetched"
          required: true
          type: "integer"
          minimum: 1.0
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Job"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Job not found"
    delete:
      tags:
        - "jobs"
      summary: "Delete Job"
      description: ""
      operationId: "deleteJob"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "jobId"
          in: "path"
          description: "ID of the job that needs to be deleted"
          required: true
          type: "integer"
          minimum: 1.0
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Job not found"

  /files:
    get:
      tags:
        - "filestore"
      summary: "Gets list of available files"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "getFiles"
      produces:
        - "application/xml"
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FileRecord"
        "400":
          description: "Invalid status value"
    post:
      tags:
        - "filestore"
      summary: "Stores a file in TinyBakerWeb's local filestore"
      description: ""
      operationId: "createFile"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "formData"
          description: "Name of the file"
          required: true
          type: "string"
        - name: "file"
          in: "formData"
          description: "file to upload"
          required: true
          type: "file"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FileRecord"
  /files/{fileId}:
    get:
      tags:
        - "filestore"
      summary: "Get file by ID"
      description: ""
      operationId: "getFileById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "fileId"
          in: "path"
          description: "ID of file that needs to be fetched"
          required: true
          type: "integer"
          minimum: 1.0
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Job"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Job not found"
    delete:
      tags:
        - "filestore"
      summary: "Delete File"
      description: ""
      operationId: "deleteFile"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "fileId"
          in: "path"
          description: "ID of the file that needs to be deleted"
          required: true
          type: "integer"
          minimum: 1.0
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "File not found"

definitions:
  Transform:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      inputTags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      outputTags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      structure:
        type: "object"
    required:
      - id
      - name
      - inputTags
      - outputTags
      - structure
    xml:
      name: "Transform"
  Job:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      transformId:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
          - "queued"
          - "running"
          - "error"
          - "halted"
          - "success"
    xml:
      name: "Job"
    required:
      - id
      - transformId
      - status
  Tag:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        description: "TinyBaker Tag"
        enum:
          - "file"
          - "fileset"
    xml:
      name: "Tag"
    required:
      - name
      - type
  FileRecord:
    type: "object"
    properties:
      id:
        type: "integer"
      path:
        type: "string"
        description: "TinyBaker file description"
    xml:
      name: "Tag"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
